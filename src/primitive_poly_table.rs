use lazy_static::lazy_static;
use std::collections::HashMap;

lazy_static! {
    static ref PRIMITIVE_POLY_TABLE: HashMap<u32, &'static str> = {
        let mut map = HashMap::new();

        map.insert(7, "x2+x1+1");
        map.insert(11, "x3+x1+1");
        map.insert(19, "x4+x1+1");
        map.insert(37, "x5+x2+1");
        map.insert(55, "x5+x4+x2+x1+1");
        map.insert(61, "x5+x4+x3+x2+1");
        map.insert(67, "x6+x1+1");
        map.insert(103, "x6+x5+x2+x1+1");
        map.insert(109, "x6+x5+x3+x2+1");
        map.insert(131, "x7+x1+1");
        map.insert(137, "x7+x3+1");
        map.insert(143, "x7+x3+x2+x1+1");
        map.insert(157, "x7+x4+x3+x2+1");
        map.insert(191, "x7+x5+x4+x3+x2+x1+1");
        map.insert(203, "x7+x6+x3+x1+1");
        map.insert(213, "x7+x6+x4+x2+1");
        map.insert(229, "x7+x6+x5+x2+1");
        map.insert(247, "x7+x6+x5+x4+x2+x1+1");
        map.insert(285, "x8+x4+x3+x2+1");
        map.insert(299, "x8+x5+x3+x1+1");
        map.insert(351, "x8+x6+x4+x3+x2+x1+1");
        map.insert(355, "x8+x6+x5+x1+1");
        map.insert(357, "x8+x6+x5+x2+1");
        map.insert(361, "x8+x6+x5+x3+1");
        map.insert(451, "x8+x7+x6+x1+1");
        map.insert(487, "x8+x7+x6+x5+x2+x1+1");
        map.insert(529, "x9+x4+1");
        map.insert(557, "x9+x5+x3+x2+1");
        map.insert(601, "x9+x6+x4+x3+1");
        map.insert(623, "x9+x6+x5+x3+x2+x1+1");
        map.insert(631, "x9+x6+x5+x4+x2+x1+1");
        map.insert(731, "x9+x7+x6+x4+x3+x1+1");
        map.insert(787, "x9+x8+x4+x1+1");
        map.insert(817, "x9+x8+x5+x4+1");
        map.insert(865, "x9+x8+x6+x5+1");
        map.insert(875, "x9+x8+x6+x5+x3+x1+1");
        map.insert(901, "x9+x8+x7+x2+1");
        map.insert(911, "x9+x8+x7+x3+x2+x1+1");
        map.insert(995, "x9+x8+x7+x6+x5+x1+1");
        map.insert(1001, "x9+x8+x7+x6+x5+x3+1");
        map.insert(1033, "x10+x3+1");
        map.insert(1051, "x10+x4+x3+x1+1");
        map.insert(1135, "x10+x6+x5+x3+x2+x1+1");
        map.insert(1293, "x10+x8+x3+x2+1");
        map.insert(1305, "x10+x8+x4+x3+1");
        map.insert(1315, "x10+x8+x5+x1+1");
        map.insert(1329, "x10+x8+x5+x4+1");
        map.insert(1509, "x10+x8+x7+x6+x5+x2+1");
        map.insert(1531, "x10+x8+x7+x6+x5+x4+x3+x1+1");
        map.insert(1555, "x10+x9+x4+x1+1");
        map.insert(1663, "x10+x9+x6+x5+x4+x3+x2+x1+1");
        map.insert(1869, "x10+x9+x8+x6+x3+x2+1");
        map.insert(1891, "x10+x9+x8+x6+x5+x1+1");
        map.insert(2041, "x10+x9+x8+x7+x6+x5+x4+x3+1");
        map.insert(2053, "x11+x2+1");
        map.insert(2091, "x11+x5+x3+x1+1");
        map.insert(2093, "x11+x5+x3+x2+1");
        map.insert(2147, "x11+x6+x5+x1+1");
        map.insert(2189, "x11+x7+x3+x2+1");
        map.insert(2341, "x11+x8+x5+x2+1");
        map.insert(2419, "x11+x8+x6+x5+x4+x1+1");
        map.insert(2431, "x11+x8+x6+x5+x4+x3+x2+x1+1");
        map.insert(2579, "x11+x9+x4+x1+1");
        map.insert(2963, "x11+x9+x8+x7+x4+x1+1");
        map.insert(3085, "x11+x10+x3+x2+1");
        map.insert(3227, "x11+x10+x7+x4+x3+x1+1");
        map.insert(3515, "x11+x10+x8+x7+x5+x4+x3+x1+1");
        map.insert(3851, "x11+x10+x9+x8+x3+x1+1");
        map.insert(4179, "x12+x6+x4+x1+1");
        map.insert(4621, "x12+x9+x3+x2+1");
        map.insert(4879, "x12+x9+x8+x3+x2+x1+1");
        map.insert(5957, "x12+x10+x9+x8+x6+x2+1");
        map.insert(6005, "x12+x10+x9+x8+x6+x5+x4+x2+1");
        map.insert(6231, "x12+x11+x6+x4+x2+x1+1");
        map.insert(6699, "x12+x11+x9+x5+x3+x1+1");
        map.insert(6865, "x12+x11+x9+x7+x6+x4+1");
        map.insert(6881, "x12+x11+x9+x7+x6+x5+1");
        map.insert(7057, "x12+x11+x9+x8+x7+x4+1");
        map.insert(7079, "x12+x11+x9+x8+x7+x5+x2+x1+1");
        map.insert(7207, "x12+x11+x10+x5+x2+x1+1");
        map.insert(7515, "x12+x11+x10+x8+x6+x4+x3+x1+1");
        map.insert(8123, "x12+x11+x10+x9+x8+x7+x5+x4+x3+x1+1");
        map.insert(8219, "x13+x4+x3+x1+1");
        map.insert(8895, "x13+x9+x7+x5+x4+x3+x2+x1+1");
        map.insert(9123, "x13+x9+x8+x7+x5+x1+1");
        map.insert(9905, "x13+x10+x9+x7+x5+x4+1");
        map.insert(10063, "x13+x10+x9+x8+x6+x3+x2+x1+1");
        map.insert(10643, "x13+x11+x8+x7+x4+x1+1");
        map.insert(12287, "x13+x11+x10+x9+x8+x7+x6+x5+x4+x3+x2+x1+1");
        map.insert(12409, "x13+x12+x6+x5+x4+x3+1");
        map.insert(12769, "x13+x12+x8+x7+x6+x5+1");
        map.insert(13077, "x13+x12+x9+x8+x4+x2+1");
        map.insert(13661, "x13+x12+x10+x8+x6+x4+x3+x2+1");
        map.insert(14375, "x13+x12+x11+x5+x2+x1+1");
        map.insert(14803, "x13+x12+x11+x8+x7+x6+x4+x1+1");
        map.insert(14889, "x13+x12+x11+x9+x5+x3+1");
        map.insert(16707, "x14+x8+x6+x1+1");
        map.insert(17475, "x14+x10+x6+x1+1");
        map.insert(18139, "x14+x10+x9+x7+x6+x4+x3+x1+1");
        map.insert(18499, "x14+x11+x6+x1+1");
        map.insert(19045, "x14+x11+x9+x6+x5+x2+1");
        map.insert(21489, "x14+x12+x9+x8+x7+x6+x5+x4+1");
        map.insert(23531, "x14+x12+x11+x9+x8+x7+x6+x5+x3+x1+1");
        map.insert(24217, "x14+x12+x11+x10+x9+x7+x4+x3+1");
        map.insert(24683, "x14+x13+x6+x5+x3+x1+1");
        map.insert(26047, "x14+x13+x10+x8+x7+x5+x4+x3+x2+x1+1");
        map.insert(26743, "x14+x13+x11+x6+x5+x4+x2+x1+1");
        map.insert(26927, "x14+x13+x11+x8+x5+x3+x2+x1+1");
        map.insert(31939, "x14+x13+x12+x11+x10+x7+x6+x1+1");
        map.insert(32353, "x14+x13+x12+x11+x10+x9+x6+x5+1");
        map.insert(32771, "x15+x1+1");
        map.insert(32785, "x15+x4+1");
        map.insert(32897, "x15+x7+1");
        map.insert(32975, "x15+x7+x6+x3+x2+x1+1");
        map.insert(33827, "x15+x10+x5+x1+1");
        map.insert(33841, "x15+x10+x5+x4+1");
        map.insert(33847, "x15+x10+x5+x4+x2+x1+1");
        map.insert(34473, "x15+x10+x9+x7+x5+x3+1");
        map.insert(34601, "x15+x10+x9+x8+x5+x3+1");
        map.insert(35015, "x15+x11+x7+x6+x2+x1+1");
        map.insert(36875, "x15+x12+x3+x1+1");
        map.insert(36925, "x15+x12+x5+x4+x3+x2+1");
        map.insert(39381, "x15+x12+x11+x8+x7+x6+x4+x2+1");
        map.insert(65533, "x15+x14+x13+x12+x11+x10+x9+x8+x7+x6+x5+x4+x3+x2+1");
        map.insert(66525, "x16+x9+x8+x7+x6+x4+x3+x2+1");
        map.insert(69643, "x16+x12+x3+x1+1");
        map.insert(69765, "x16+x12+x7+x2+1");
        map.insert(79555, "x16+x13+x12+x10+x9+x7+x6+x1+1");
        map.insert(80075, "x16+x13+x12+x11+x7+x6+x3+x1+1");
        map.insert(80967, "x16+x13+x12+x11+x10+x6+x2+x1+1");
        map.insert(83211, "x16+x14+x10+x8+x3+x1+1");
        map.insert(94317, "x16+x14+x13+x12+x6+x5+x3+x2+1");
        map.insert(95361, "x16+x14+x13+x12+x10+x7+1");
        map.insert(99439, "x16+x15+x10+x6+x5+x3+x2+x1+1");
        map.insert(101303, "x16+x15+x11+x9+x8+x7+x5+x4+x2+x1+1");
        map.insert(101615, "x16+x15+x11+x10+x7+x6+x5+x3+x2+x1+1");
        map.insert(101959, "x16+x15+x11+x10+x9+x6+x2+x1+1");
        map.insert(102231, "x16+x15+x11+x10+x9+x8+x6+x4+x2+x1+1");
        map.insert(131081, "x17+x3+1");
        map.insert(131087, "x17+x3+x2+x1+1");
        map.insert(131105, "x17+x5+1");
        map.insert(131137, "x17+x6+1");
        map.insert(131353, "x17+x8+x4+x3+1");
        map.insert(131545, "x17+x8+x7+x6+x4+x3+1");
        map.insert(132973, "x17+x10+x9+x8+x6+x5+x3+x2+1");
        map.insert(135247, "x17+x12+x6+x3+x2+x1+1");
        map.insert(135743, "x17+x12+x9+x5+x4+x3+x2+x1+1");
        map.insert(135901, "x17+x12+x9+x7+x6+x4+x3+x2+1");
        map.insert(149679, "x17+x14+x11+x7+x5+x3+x2+x1+1");
        map.insert(174761, "x17+x15+x13+x11+x9+x7+x5+x3+1");
        map.insert(174807, "x17+x15+x13+x11+x9+x7+x6+x4+x2+x1+1");
        map.insert(196619, "x17+x16+x3+x1+1");
        map.insert(262207, "x18+x5+x4+x3+x2+x1+1");
        map.insert(262273, "x18+x7+1");
        map.insert(262311, "x18+x7+x5+x2+x1+1");
        map.insert(262407, "x18+x8+x2+x1+1");
        map.insert(262897, "x18+x9+x7+x6+x5+x4+1");
        map.insert(263031, "x18+x9+x8+x6+x5+x4+x2+x1+1");
        map.insert(263127, "x18+x9+x8+x7+x6+x4+x2+x1+1");
        map.insert(263329, "x18+x10+x7+x5+1");
        map.insert(263457, "x18+x10+x8+x5+1");
        map.insert(263679, "x18+x10+x8+x7+x6+x5+x4+x3+x2+x1+1");
        map.insert(263689, "x18+x10+x9+x3+1");
        map.insert(270417, "x18+x13+x6+x4+1");
        map.insert(294949, "x18+x15+x5+x2+1");
        map.insert(295429, "x18+x15+x9+x2+1");
        map.insert(524327, "x19+x5+x2+x1+1");
        map.insert(524351, "x19+x5+x4+x3+x2+x1+1");
        map.insert(524359, "x19+x6+x2+x1+1");
        map.insert(524399, "x19+x6+x5+x3+x2+x1+1");
        map.insert(524413, "x19+x6+x5+x4+x3+x2+1");
        map.insert(524463, "x19+x7+x5+x3+x2+x1+1");
        map.insert(524705, "x19+x8+x7+x5+1");
        map.insert(524735, "x19+x8+x7+x5+x4+x3+x2+x1+1");
        map.insert(524767, "x19+x8+x7+x6+x4+x3+x2+x1+1");
        map.insert(525089, "x19+x9+x8+x5+1");
        map.insert(525167, "x19+x9+x8+x6+x5+x3+x2+x1+1");
        map.insert(525215, "x19+x9+x8+x7+x4+x3+x2+x1+1");
        map.insert(527357, "x19+x11+x9+x8+x7+x6+x5+x4+x3+x2+1");
        map.insert(527807, "x19+x11+x10+x8+x7+x5+x4+x3+x2+x1+1");
        map.insert(599187, "x19+x16+x13+x10+x7+x4+x1+1");
        map.insert(1048585, "x20+x3+1");
        map.insert(1049129, "x20+x9+x5+x3+1");
        map.insert(1050957, "x20+x11+x8+x6+x3+x2+1");
        map.insert(1066865, "x20+x14+x10+x9+x8+x6+x5+x4+1");
        map.insert(1197213, "x20+x17+x14+x10+x7+x4+x3+x2+1");
        map.insert(1572889, "x20+x19+x4+x3+1");
        map.insert(2097157, "x21+x2+1");
        map.insert(2097565, "x21+x8+x7+x4+x3+x2+1");
        map.insert(2098269, "x21+x10+x6+x4+x3+x2+1");
        map.insert(2105381, "x21+x13+x5+x2+1");
        map.insert(2113669, "x21+x14+x7+x2+1");
        map.insert(2113741, "x21+x14+x7+x6+x3+x2+1");
        map.insert(2117853, "x21+x14+x12+x7+x6+x4+x3+x2+1");
        map.insert(2131517, "x21+x15+x10+x9+x5+x4+x3+x2+1");
        map.insert(3932221, "x21+x20+x19+x18+x5+x4+x3+x2+1");
        map.insert(4194307, "x22+x1+1");
        map.insert(4194851, "x22+x9+x5+x1+1");
        map.insert(4223119, "x22+x14+x13+x12+x7+x3+x2+x1+1");
        map.insert(4326023, "x22+x17+x9+x7+x2+x1+1");
        map.insert(4338055, "x22+x17+x13+x12+x8+x7+x2+x1+1");
        map.insert(5570647, "x22+x20+x18+x16+x6+x4+x2+x1+1");
        map.insert(8388641, "x23+x5+1");
        map.insert(8388659, "x23+x5+x4+x1+1");
        map.insert(8391905, "x23+x11+x10+x7+x6+x5+1");
        map.insert(8392753, "x23+x12+x5+x4+1");
        map.insert(8423097, "x23+x15+x10+x9+x7+x5+x4+x3+1");
        map.insert(8462441, "x23+x16+x13+x6+x5+x3+1");
        map.insert(8521761, "x23+x17+x11+x5+1");
        map.insert(8522547, "x23+x17+x11+x9+x8+x5+x4+x1+1");
        map.insert(8726821, "x23+x18+x16+x13+x11+x8+x5+x2+1");
        map.insert(10485921, "x23+x21+x7+x5+1");
        map.insert(16777351, "x24+x7+x2+x1+1");
        map.insert(
            19916339;
            "x24+x21+x19+x18+x17+x16+x15+x14+x13+x10+x9+x5+x4+x1+1";
        );
        map.insert(22367153, "x24+x22+x20+x18+x16+x14+x11+x9+x8+x7+x5+x4+1");
        map.insert(33554441, "x25+x3+1");
        map.insert(33554447, "x25+x3+x2+x1+1");
        map.insert(33557341, "x25+x11+x9+x8+x6+x4+x3+x2+1");
        map.insert(33558553, "x25+x12+x4+x3+1");
        map.insert(33561049, "x25+x12+x11+x8+x7+x6+x4+x3+1");
        map.insert(33686543, "x25+x17+x10+x3+x2+x1+1");
        map.insert(33822841, "x25+x18+x12+x11+x6+x5+x4+x3+1");
        map.insert(34603049, "x25+x20+x5+x3+1");
        map.insert(34670639, "x25+x20+x16+x11+x5+x3+x2+x1+1");
        map.insert(44565161, "x25+x23+x21+x19+x9+x7+x5+x3+1");
        map.insert(67108935, "x26+x6+x2+x1+1");
        map.insert(
            67759085;
            "x26+x19+x16+x15+x14+x13+x11+x9+x8+x7+x6+x5+x3+x2+1";
        );
        map.insert(
            69581689;
            "x26+x21+x18+x16+x15+x13+x12+x11+x9+x8+x6+x5+x4+x3+1";
        );
        map.insert(
            72952759;
            "x26+x22+x20+x19+x16+x13+x11+x9+x8+x7+x5+x4+x2+x1+1";
        );
        map.insert(73473339, "x26+x22+x21+x16+x12+x11+x10+x8+x5+x4+x3+x1+1");
        map.insert(
            82636645;
            "x26+x23+x22+x21+x19+x18+x15+x14+x13+x11+x10+x9+x8+x6+x5+x2+1";
        );
        map.insert(86206675, "x26+x24+x21+x17+x16+x14+x13+x11+x7+x6+x4+x1+1");
        map.insert(134217767, "x27+x5+x2+x1+1");
        map.insert(134483513, "x27+x18+x11+x10+x9+x5+x4+x3+1");
        map.insert(138422393, "x27+x22+x13+x11+x6+x5+x4+x3+1");
        map.insert(138600515, "x27+x22+x17+x15+x14+x13+x6+x1+1");
        map.insert(141996193, "x27+x22+x21+x20+x18+x17+x15+x13+x12+x7+x5+1");
        map.insert(151589263, "x27+x24+x19+x16+x12+x8+x7+x3+x2+x1+1");
        map.insert(153692793, "x27+x24+x21+x19+x16+x13+x11+x9+x6+x5+x4+x3+1");
        map.insert(
            178269167;
            "x27+x25+x23+x21+x13+x11+x9+x8+x7+x6+x5+x3+x2+x1+1";
        );
        map.insert(
            180176281;
            "x27+x25+x23+x21+x20+x19+x18+x16+x14+x10+x8+x7+x4+x3+1";
        );
        map.insert(268435465, "x28+x3+1");
        map.insert(268446249, "x28+x13+x11+x9+x5+x3+1");
        map.insert(268894777, "x28+x18+x17+x16+x9+x5+x4+x3+1");
        map.insert(269124685, "x28+x19+x17+x15+x10+x6+x3+x2+1");
        map.insert(272632857, "x28+x22+x11+x10+x4+x3+1");
        map.insert(286331161, "x28+x24+x20+x16+x12+x8+x4+x3+1");
        map.insert(536870917, "x29+x2+1");
        map.insert(536875141, "x29+x12+x7+x2+1");
        map.insert(537149517, "x29+x18+x14+x6+x3+x2+1");
        map.insert(537460813, "x29+x19+x16+x6+x3+x2+1");
        map.insert(537921541, "x29+x20+x11+x2+1");
        map.insert(537987357, "x29+x20+x16+x11+x8+x4+x3+x2+1");
        map.insert(538968101, "x29+x21+x5+x2+1");
        map.insert(545261117, "x29+x23+x10+x9+x5+x4+x3+x2+1");
        map.insert(553672989, "x29+x24+x14+x13+x8+x4+x3+x2+1");
        map.insert(603979813, "x29+x26+x5+x2+1");
        map.insert(1082130439, "x30+x23+x2+x1+1");
        map.insert(1091659911, "x30+x24+x20+x16+x14+x13+x11+x7+x2+x1+1");
        map.insert(
            1093972699;
            "x30+x24+x21+x20+x18+x15+x13+x12+x9+x7+x6+x4+x3+x1+1";
        );
        map.insert(
            1133332827;
            "x30+x25+x24+x23+x19+x18+x16+x14+x11+x8+x6+x4+x3+x1+1";
        );
        map.insert(
            1271469507;
            "x30+x27+x25+x24+x23+x22+x19+x16+x12+x10+x8+x7+x6+x1+1";
        );
        map.insert(2147483657, "x31+x3+1");
        map.insert(2147483663, "x31+x3+x2+x1+1");
        map.insert(2147492105, "x31+x13+x8+x3+1");
        map.insert(2147549469, "x31+x16+x8+x4+x3+x2+1");
        map.insert(2148565049, "x31+x20+x15+x5+x4+x3+1");
        map.insert(2148794537, "x31+x20+x18+x7+x5+x3+1");
        map.insert(2149584911, "x31+x21+x12+x3+x2+x1+1");
        map.insert(2160115865, "x31+x23+x22+x15+x14+x7+x4+x3+1");
        map.insert(2181578895, "x31+x25+x19+x14+x7+x3+x2+x1+1");
        map.insert(2290649225, "x31+x27+x23+x19+x15+x11+x7+x3+1");
        map.insert(
            2290650863;
            "x31+x27+x23+x19+x15+x11+x10+x9+x7+x6+x5+x3+x2+x1+1";
        );
        map.insert(4299161607, "x32+x22+x2+x1+1");
        map.insert(
            4302746963;
            "x32+x22+x21+x20+x18+x17+x15+x13+x12+x10+x8+x6+x4+x1+1";
        );
        map.insert(4303570409, "x32+x23+x17+x16+x14+x10+x8+x7+x6+x5+x3+1");
        map.insert(
            4374732215;
            "x32+x26+x23+x22+x16+x12+x11+x10+x8+x7+x5+x4+x2+x1+1";
        );
        map.insert(
            4559351687;
            "x32+x27+x26+x25+x24+x23+x22+x17+x13+x11+x10+x9+x8+x7+x2+x1+1";
        );
        map.insert(4564274787, "x32+x28+x19+x18+x16+x14+x11+x10+x9+x6+x5+x1+1");

        map
    }
}

pub fn get_primitive_table_hash() -> HashMap<u32, &'static str> {
    PRIMITIVE_POLY_TABLE
}
